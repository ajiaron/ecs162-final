{{!< main }}
<div id="donate-component">
    <div class="donate-page">
        <div class="donate-page-container">
            <div class="checkout-container">
                <div class="checkout-content">
                    <div class="checkout-header-container">
                        <p class="cart-header-text">Order Checkout</p>
                    </div>
                    <div class="checkout-details-container">
                        <p class="checkout-details-header">Donation to {{profile}}</p>
                        <div class="dedication-container">
                            <label for="donation-amount" class="dedication-text">Your Contribution: $</label>
                            <input placeholder="Enter dollar amount"
                            type="number" id="donation-amount" name="donation-amount" value="1.00" min="1" step="0.01" onchange="updatePaymentIntent()" class="donation-input">
                        </div>
                    </div>
                    <form id="payment-form">
                        <div class="stripe-payment-container">
                            <div class="payment-method-container">
                                <div id="payment-element">
                                    <!-- A Stripe Element will be inserted here. -->
                                </div>
                                <div id="card-errors" role="alert"></div>
                            </div>
                        </div>
                        <div class="checkout-footer-wrapper">
                            <div class="checkout-terms-footer">
                                <p class="terms-text">For educational purposes only.</p>
                                <p class="terms-bold-text">Terms and conditions apply.</p>
                            </div>
                            <div class="checkout-confirm-container">
                                <button type="submit" class="confirm-checkout-button">
                                    <p class="confirm-checkout-text">Confirm Order Checkout</p>
                                    <i class="arrow-checkout-icon"></i>
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://js.stripe.com/v3/"></script>
<!-- Include your donate.js script -->
<script>
    const accountid = {{{json accountid}}}
    const profile = {{{json profile}}}
    document.addEventListener('DOMContentLoaded', async () => {
        const stripe = Stripe('pk_test_51NbpB6H1mJlHYnBWRw9lhg4y7T8j2ORYSxbpGqaZSOyL1rabFvBnOmKVnuQpd2c3la3R6Nj9LsXR9aLqrPNW0Owy00tGbZTXh2');
        let clientSecret = await getPaymentIntent();
        const options = {
            clientSecret: clientSecret,
            automatic_payment_methods: {
                enabled: true,
            },
            appearance: {
                theme: 'flat',
                variables: {
                    fontFamily: '"Gill Sans", sans-serif',
                    fontLineHeight: '1.5',
                    color: '#aaa',
                    borderRadius: '10px',
                    colorBackground: '#252525',
                    colorText: '#eee',
                    colorPrimaryText: '#a0a0a0',
                },
                rules: {
                    'p': {
                        color: '#eee'
                    },
                    '.Block': {
                        backgroundColor: 'var(--colorBackground)',
                        boxShadow: 'none',
                        padding: '12px'
                    },
                    '.Input': {
                        padding: '12px',
                        color: '#eee'
                    },
                    '.Input:disabled, .Input--invalid:disabled': {
                        color: '#aaa'
                    },
                    '.Tab': {
                        padding: '10px 12px 8px 12px',
                        border: 'none'
                    },
                    '.p-Checkbox-labelContent': {
                        color: 'eee'
                    },
                    'u-lh': {
                        color: 'eee'
                    },
                    '.TabLabel': {
                        color: '#eee'
                    },
                    '.TabLabel--selected': {
                        color: '#a0a0a0'
                    },
                    '.Tab:hover': {
                        border: 'none',
                        boxShadow: '0px 1px 1px rgba(0, 0, 0, 0.03), 0px 3px 7px rgba(18, 42, 66, 0.04)'
                    },
                    '.Tab--selected, .Tab--selected:focus, .Tab--selected:hover': {
                        border: 'none',
                        backgroundColor: '#fff',
                        boxShadow: '0 0 0 1.5px var(--colorPrimaryText), 0px 1px 1px rgba(0, 0, 0, 0.03), 0px 3px 7px rgba(18, 42, 66, 0.04)'
                    },
                    '.Label': {
                        fontWeight: '500',
                        color: '#aaa'
                    }
                }
            }
        };
        const elements = stripe.elements(options);
        const paymentElement = elements.create('payment');
        paymentElement.mount('#payment-element');
        const form = document.getElementById('payment-form');
        form.addEventListener('submit', async (event) => {
            event.preventDefault();
            elements.submit();
            const { error } = await stripe.confirmPayment({
                elements,
                clientSecret: clientSecret,
                confirmParams: {
                    return_url: `http://localhost:3000/confirmation/${profile}`
                }
            });
            if (error) {
                document.getElementById('card-errors').textContent = error.message;
            } 
        });
        // Apply debounce to the donation amount input
        const donationAmountInput = document.getElementById('donation-amount');
        donationAmountInput.addEventListener('input', debounce(async function() {
            clientSecret = await updatePaymentIntent();
            //document.querySelector('.confirm-checkout-button').classList.remove('disabled');
        }, 500));
    });


    async function getPaymentIntent() {
        const amount = document.getElementById('donation-amount').value;
        try {
            const res = await fetch('http://localhost:3000/api/createintent', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    amount: Math.round(amount * 100),
                    accountid: accountid
                })
            });
            const data = await res.json();
            if (data.client_secret) {
                return data.client_secret  
            } 
        } catch(e) {
            console.log(e)
        }
    }
    function debounce(func, wait) {
        let timeout;
        return function(...args) {
            const context = this;
            const button = document.querySelector('.confirm-checkout-button');
            button.classList.add('disabled');
            clearTimeout(timeout);
            timeout = setTimeout(() => {
                func.apply(context, args);
                button.classList.remove('disabled'); // Remove the disabled class when the input stops changing
            }, wait);
        };
    }
    // need to debounce this
    async function updatePaymentIntent() {
        const amount = document.getElementById('donation-amount').value;
        console.log(Math.round(amount*100))
        if (amount > 0) {
            try {
                const res = await fetch('http://localhost:3000/api/createintent', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        amount: Math.round(amount * 100),  // Convert to cents
                        accountid: accountid
                    })
                });
                const data = await res.json();
                if (data.client_secret) {
                    return data.client_secret;
                } 
            } catch(e) {
                console.log(e);
            }
        }
    }
    // need to change return url to confirmation page
</script>


